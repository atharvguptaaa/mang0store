// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "order_items",
    checkConstraints: {
      order_items_xata_id_length_xata_id: {
        name: "order_items_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      order_id_link: {
        name: "order_id_link",
        columns: ["order_id"],
        referencedTable: "orders",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      product_id_link: {
        name: "product_id_link",
        columns: ["product_id"],
        referencedTable: "products",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_order_items_xata_id_key: {
        name: "_pgroll_new_order_items_xata_id_key",
        columns: ["xata_id"],
      },
      order_items__pgroll_new_order_id_key: {
        name: "order_items__pgroll_new_order_id_key",
        columns: ["order_id"],
      },
      order_items__pgroll_new_product_id_key: {
        name: "order_items__pgroll_new_product_id_key",
        columns: ["product_id"],
      },
      order_items_order_item_id_unique: {
        name: "order_items_order_item_id_unique",
        columns: ["order_item_id"],
      },
    },
    columns: [
      {
        name: "item_price",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "order_id",
        type: "link",
        link: { table: "orders" },
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: '{"xata.link":"orders"}',
      },
      {
        name: "order_item_id",
        type: "int",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product_id",
        type: "link",
        link: { table: "products" },
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: '{"xata.link":"products"}',
      },
      {
        name: "quantity",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "orders",
    checkConstraints: {
      orders_xata_id_length_xata_id: {
        name: "orders_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_orders_xata_id_key: {
        name: "_pgroll_new_orders_xata_id_key",
        columns: ["xata_id"],
      },
      orders__pgroll_new_order_id_key: {
        name: "orders__pgroll_new_order_id_key",
        columns: ["order_id"],
      },
      orders__pgroll_new_user_id_key: {
        name: "orders__pgroll_new_user_id_key",
        columns: ["user_id"],
      },
    },
    columns: [
      {
        name: "order_date",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "order_id",
        type: "int",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shipping address",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "total_amount",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "products",
    checkConstraints: {
      products_xata_id_length_xata_id: {
        name: "products_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_products_xata_id_key: {
        name: "_pgroll_new_products_xata_id_key",
        columns: ["xata_id"],
      },
      products__pgroll_new_product_id_key: {
        name: "products__pgroll_new_product_id_key",
        columns: ["product_id"],
      },
    },
    columns: [
      {
        name: "category",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "image_url",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "price",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product_id",
        type: "int",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stock_quantity",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "users",
    checkConstraints: {
      users_xata_id_length_xata_id: {
        name: "users_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_users_xata_id_key: {
        name: "_pgroll_new_users_xata_id_key",
        columns: ["xata_id"],
      },
      users__pgroll_new_user_id_key: {
        name: "users__pgroll_new_user_id_key",
        columns: ["user_id"],
      },
      users__pgroll_new_username_key: {
        name: "users__pgroll_new_username_key",
        columns: ["username"],
      },
    },
    columns: [
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "password_hash",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "int",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "username",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Atharv-Gupta-s-workspace-b7qgbj.us-east-1.xata.sh/db/MyPostgresdb",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient({
    apiKey: process.env.XATA_API_KEY,
    branch: process.env.XATA_BRANCH,
  });
  return instance;
};
